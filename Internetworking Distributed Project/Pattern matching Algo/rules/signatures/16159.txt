Rule:

--
Sid:
16159

--
Summary:
This event is generated when an attempt is made to exploit a known vulnerability in an ActiveX control.

--
Impact:
A successful attack can cause a buffer overflow and the subsequent execution of arbitrary code with system level privileges on a vulnerable host.

--
Detailed Information:
A vulnerability exists in the way that Internet Explorer handles ActiveX controls that may present an attacker with the opportunity to run code of their choosing on a host.

In particular, this event is generated when a call to the Visual C++ is made. This may indicate an attempt to exploit known vulnerabilities in that ActiveX control which may lead to a system compromise.

The Active Template Library (ATL) in Microsoft Visual Studio .NET 2003 SP1, Visual Studio 2005 SP1 and 2008 Gold and SP1, and Visual C++ 2005 SP1 and 2008 Gold and SP1; and Windows 2000 SP4, XP SP2 and SP3, Server 2003 SP2, Vista Gold, SP1, and SP2, and Server 2008 Gold and SP2; does not properly restrict use of OleLoadFromStream in instantiating objects from data streams, which allows remote attackers to execute arbitrary code via a crafted HTML document with an ATL (1) component or (2) control, related to ATL headers and bypassing security policies, aka "ATL COM Initialization Vulnerability."

NOTE: For this detection to work comprehensively, the flow depth setting in the HTTP Inspect preprocessor must be set to 0

--
Affected Systems:
Microsoft Windows systems using the Visual C++ ActiveX control

--
Attack Scenarios:
An attacker can host a web site that will return code of their choosing to the object when a victim clicks on a malicious link.

--
Ease of Attack:
Simple.

--
False Positives:
None known.

--
False Negatives:
None known.

--
Corrective Action:
Upgrade to the most current non-affected version of the product.

--
Contributors:
This document was generated from data supplied by the National Vulnerability Database. A product of the National Institute of Standards and Technology.
For more information see http://nvd.nist.gov/
Sourcefire Vulnerability Research Team
Alex Kirk <akirk@sourcefire.com>
Nigel Houghton <nigel.houghton@sourcefire.com>

--
Additional References

--
